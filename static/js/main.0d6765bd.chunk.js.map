{"version":3,"sources":["types/Status.ts","utils/fetchClient.ts","types/PageLinkType.ts","features/productsSlice.ts","api/product.ts","features/productDetailsSlice.ts","api/productDetails.ts","utils/saveCartItems.ts","features/cartItemsSlice.ts","utils/initCart.ts","utils/saveFavourites.ts","features/favouriteItemsSlice.ts","utils/initFavourites.ts","app/store.ts","app/hooks.ts","images/logo.svg","components/Logo/Logo.tsx","components/PageLink/PageLink.tsx","components/Nav/Nav.tsx","components/Counter/Counter.tsx","utils/getSearchWith.ts","utils/debounce.ts","types/ProductType.ts","components/Search/Search.tsx","components/Header/Header.tsx","components/Footer/Footer.tsx","App.tsx","utils/getProductDiscount.ts","components/ProductCard/ProductCard.tsx","components/ProductsSlider/ProductsSlider.tsx","images/category/phones.png","types/SortBy.ts","images/category/tablets.png","images/category/accessories.png","utils/getCategoryData.ts","utils/formatTotal.ts","components/Category/Category.tsx","utils/countProductByCategory.ts","components/ShopByCategory/ShopByCategory.tsx","images/banner/banner-phones.png","images/banner/banner-tablets.png","images/banner/banner-accessories.png","components/Slider/Slider.tsx","pages/HomePage/HomePage.tsx","components/DropDown/DropDown.tsx","utils/getDropDownText.ts","components/ProductListFilter/ProductListFilter.tsx","components/ProductList/ProductList.tsx","components/Loader/Loader.tsx","components/SearchLink/SearchLink.tsx","components/Pagination/Pagination.tsx","utils/getPageNumbers.ts","components/NoResults/NoResults.tsx","components/NoSearchResults/NoSearchResults.tsx","utils/containQuery.ts","hooks/useProducts.ts","utils/compareProducts.ts","components/Breadcrumbs/Breadcrumbs.tsx","pages/ProductsPage/ProductsPage.tsx","components/BackButton/BackButton.tsx","pages/ProductDetailsPage/ProductDetailsPage.tsx","components/CartItem/CartItem.tsx","pages/CartPage/CartPage.tsx","pages/FavouritesPage/FavouritesPage.tsx","hooks/useFavouriteItems.ts","pages/NotFoundPage/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["Status","BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","json","PageLinkType","client","initialState","products","status","IDLE","fetchProducts","createAsyncThunk","productsSlice","createSlice","name","reducers","extraReducers","builder","addCase","pending","state","LOADING","fulfilled","action","payload","rejected","FAILED","actions","productDetails","fetchProductDetails","productId","productDetailsSlice","saveCartItems","key","cartItems","localStorage","setItem","KEY","loadedItems","getItem","parse","initCart","cartItemsSlice","addToCart","removeFromCart","filter","cartItem","id","plusProduct","map","quantity","minusProduct","saveFavourites","fovourites","favouriteItems","initFavourites","favouriteItemsSlice","addToFavourites","removeFromFavourites","favouriteItem","store","configureStore","reducer","productsReducer","productDetailsReducer","useAppDispatch","useDispatch","useAppSelector","useSelector","Logo","to","className","src","LogoIcon","alt","width","height","PageLink","linkType","children","props","isActive","cn","PageLink_text","TEXT","PageLink_heart","HEART","PageLink_cart","CART","PageLink_active","Nav","Counter","Counter_active","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","value","delete","Array","isArray","part","append","set","ProductType","Search","useSearchParams","searchParams","setSearchParams","queryParam","get","useState","query","setQuery","location","useLocation","currentPath","useMemo","pathname","split","useEffect","applyQuery","useCallback","callback","timerId","args","window","clearTimeout","debounce","type","placeholder","onChange","event","target","page","onClick","validSearchPathes","Header","cartQuantity","reduce","acc","favouriteQuantity","length","isCartPage","isVisibleSearch","some","path","Footer","rel","href","scrollTo","App","getProductDiscount","price","discount","ProductCard","product","dispatch","isItemInCart","item","isItemInFavourites","imageUrl","screen","capacity","ram","discountPrice","productDetailsPath","loading","decoding","Button_in_cart","disabled","Icon_heart","Icon_heart_in_favoutites","SLIDE_WINDOW","CARD_COUNT","ProductsSlider","title","offsetWidth","setOffsetWidth","maxOffset","Math","floor","sliderWidth","styleProductList","transform","currentOffset","min","max","style","SortBy","getCategoryData","productType","PHONE","imgPath","phoneImgPath","linkPath","TABLET","tabletImgPath","ACCESSORY","accessoriesImgPath","formatTotal","total","word","Category","countProduct","countProductByCategory","totalProduct","ShopByCategory","IMG_WIDTH","Slider","isFirstSlide","isLastSlide","handleSlideRight","isDotActive","dotIndex","abs","intervalID","setInterval","clearInterval","bannerPhones","bannerTablets","bannerAccessories","HomePage","getHotPriceProducts","sort","a","b","getBrandNewProducts","DropDown","label","searchParamName","setIsActive","searchParam","buttonText","selectOptions","find","option","getDropDownText","handleDocumentClick","document","addEventListener","removeEventListener","active","Icon_arrow_down","Icon_arrow_up","searchParamClick","sortOptions","AGE","NAME","PRICE","perPageOptions","ProductListFilter","ProductList","Loader","SearchLink","params","search","Pagination","perPage","currentPage","totalPages","ceil","pageNumbers","from","numbers","n","push","getPageNumbers","Icon_arrow_disabled","NoResults","categoryTitle","NoSearchResults","containQuery","toLowerCase","includes","useSearchedProducts","productsByType","useProductsByType","useSortedProducts","sortBy","searchedProducts","product1","product2","age","localeCompare","compareProducts","useProductsPerPage","sortedProducts","perPageParam","Number","Breadcrumbs","crumbs","crumb","index","arr","ProductsPage","sortedProductsTotal","isEmptySortedPoducts","isEmptyQuery","productsPerPage","paginatedProducts","firstItem","lastItem","_","usePaginatedProducts","totalModelString","totalResultString","pageTitle","BackButton","navigate","useNavigate","productColors","productCapacities","ProductDetailsPage","productImgId","SetProductImgId","productColorId","SetProductColorId","productCapacityId","SetProductCapacityId","productsStatus","productDetailsStatus","useParams","suggestedProducts","images","color","backgroundColor","display","screenSize","screenResolution","hardware","cpu","storage","description","flash","camera","primary","battery","standbyTime","CartItem","dispath","productID","CartPage","isCheckOut","SetIsCheckOut","isCartEmpty","cartTotal","FavouritesPage","searchedItems","useSearchedItems","searchedItemsTotal","isSearchedItemsEmpty","totalString","NotFoundPage","Root","element","replace","root","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.0d6765bd.chunk.js","sourcesContent":["export const enum Status {\n  IDLE,\n  LOADING,\n  FAILED,\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_phone-catalog/api/products';\n\n// a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // for a demo purpose we emulate a delay to see if Loaders work\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => response.json());\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","export const enum PageLinkType {\n  TEXT,\n  HEART,\n  CART,\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { Status } from '../types/Status';\nimport { Product } from '../types/Product';\nimport { getProducts } from '../api/product';\n\nexport type ProductsState = {\n  products: Product[];\n  status: Status;\n};\n\nconst initialState: ProductsState = {\n  products: [],\n  status: Status.IDLE,\n};\n\nexport const fetchProducts = createAsyncThunk(\n  'products/fetch',\n  () => getProducts(),\n);\n\nexport const productsSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchProducts.pending, (state) => {\n        state.status = Status.LOADING;\n      })\n      .addCase(fetchProducts.fulfilled, (state, action) => {\n        state.status = Status.IDLE;\n        state.products = action.payload;\n      })\n      .addCase(fetchProducts.rejected, (state) => {\n        state.status = Status.FAILED;\n      });\n  },\n});\n\nexport const { actions } = productsSlice;\nexport default productsSlice.reducer;\n","import { Product } from '../types/Product';\nimport { client } from '../utils/fetchClient';\n\nexport const getProducts = () => {\n  return client.get<Product[]>('.json');\n};\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { Status } from '../types/Status';\nimport { ProductDetails } from '../types/ProductDetails';\nimport { getProductDetails } from '../api/productDetails';\n\nexport type ProductDetailsState = {\n  productDetails: ProductDetails | null;\n  status: Status;\n};\n\nconst initialState: ProductDetailsState = {\n  productDetails: null,\n  status: Status.IDLE,\n};\n\nexport const fetchProductDetails = createAsyncThunk(\n  'productDetails/fetch',\n  (productId: string) => getProductDetails(productId),\n);\n\nexport const productDetailsSlice = createSlice({\n  name: 'productDetails',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchProductDetails.pending, (state) => {\n        state.status = Status.LOADING;\n      })\n      .addCase(fetchProductDetails.fulfilled, (state, action) => {\n        state.status = Status.IDLE;\n        state.productDetails = action.payload;\n      })\n      .addCase(fetchProductDetails.rejected, (state) => {\n        state.status = Status.FAILED;\n      });\n  },\n});\n\nexport const { actions } = productDetailsSlice;\nexport default productDetailsSlice.reducer;\n","import { ProductDetails } from '../types/ProductDetails';\nimport { client } from '../utils/fetchClient';\n\nexport const getProductDetails = (id: string) => {\n  return client.get<ProductDetails>(`/${id}.json`);\n};\n","import { CartItemType } from '../types/CartItem';\n\nexport const saveCartItems = (\n  key: string,\n  cartItems: CartItemType[],\n) => {\n  return localStorage.setItem(key, JSON.stringify(cartItems));\n};\n","/* eslint-disable no-param-reassign */\nimport { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { CartItemType } from '../types/CartItem';\nimport { initCart } from '../utils/initCart';\nimport { saveCartItems } from '../utils/saveCartItems';\n\nconst KEY = 'CART_ITEMS';\nconst initialCartItems = initCart(KEY);\n\nexport type CartItemsState = {\n  cartItems: CartItemType[];\n};\n\nconst initialState: CartItemsState = {\n  cartItems: initialCartItems,\n};\n\nconst cartItemsSlice = createSlice({\n  name: 'cartItems',\n  initialState,\n  reducers: {\n    addToCart: (state, action: PayloadAction<CartItemType>) => {\n      state.cartItems = [...state.cartItems, action.payload];\n\n      saveCartItems(KEY, state.cartItems);\n    },\n    removeFromCart: (state, action: PayloadAction<string>) => {\n      state.cartItems = state.cartItems\n        .filter(cartItem => cartItem.id !== action.payload);\n\n      saveCartItems(KEY, state.cartItems);\n    },\n    plusProduct: (state, action: PayloadAction<string>) => {\n      state.cartItems = state.cartItems\n        .map(cartItem => {\n          if (cartItem.id === action.payload) {\n            return { ...cartItem, quantity: cartItem.quantity + 1 };\n          }\n\n          return cartItem;\n        });\n\n      saveCartItems(KEY, state.cartItems);\n    },\n    minusProduct: (state, action: PayloadAction<string>) => {\n      state.cartItems = state.cartItems\n        .map(cartItem => {\n          if (cartItem.id === action.payload) {\n            return { ...cartItem, quantity: cartItem.quantity - 1 };\n          }\n\n          return cartItem;\n        });\n\n      saveCartItems(KEY, state.cartItems);\n    },\n  },\n});\n\nexport const {\n  addToCart,\n  removeFromCart,\n  plusProduct,\n  minusProduct,\n} = cartItemsSlice.actions;\nexport default cartItemsSlice.reducer;\n","import { CartItemType } from '../types/CartItem';\n\nexport const initCart = (key: string): CartItemType[] => {\n  const loadedItems = localStorage.getItem(key);\n\n  return loadedItems\n    ? JSON.parse(loadedItems)\n    : [];\n};\n","import { Product } from '../types/Product';\n\nexport const saveFavourites = (\n  key: string,\n  fovourites: Product[],\n) => {\n  return localStorage.setItem(key, JSON.stringify(fovourites));\n};\n","/* eslint-disable no-param-reassign */\nimport { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { Product } from '../types/Product';\nimport { initFavourites } from '../utils/initFavourites';\nimport { saveFavourites } from '../utils/saveFavourites';\n\nconst KEY = 'FAVOURITE_ITEMS';\nconst initialFavourites = initFavourites(KEY);\n\nexport type FavouriteItemsState = {\n  favouriteItems: Product[];\n};\n\nconst initialState: FavouriteItemsState = {\n  favouriteItems: initialFavourites,\n};\n\nconst favouriteItemsSlice = createSlice({\n  name: 'favouriteItems',\n  initialState,\n  reducers: {\n    addToFavourites: (state, action: PayloadAction<Product>) => {\n      state.favouriteItems = [...state.favouriteItems, action.payload];\n\n      saveFavourites(KEY, state.favouriteItems);\n    },\n    removeFromFavourites: (state, action: PayloadAction<string>) => {\n      state.favouriteItems = state.favouriteItems\n        .filter(favouriteItem => favouriteItem.id !== action.payload);\n\n      saveFavourites(KEY, state.favouriteItems);\n    },\n  },\n});\n\nexport const {\n  addToFavourites,\n  removeFromFavourites,\n} = favouriteItemsSlice.actions;\nexport default favouriteItemsSlice.reducer;\n","import { Product } from '../types/Product';\n\nexport const initFavourites = (key: string): Product[] => {\n  const loadedItems = localStorage.getItem(key);\n\n  return loadedItems\n    ? JSON.parse(loadedItems)\n    : [];\n};\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\n// eslint-disable-next-line import/no-cycle\nimport productsReducer from '../features/productsSlice';\nimport productDetailsReducer from '../features/productDetailsSlice';\nimport cartItemsSlice from '../features/cartItemsSlice';\nimport favouriteItemsSlice from '../features/favouriteItemsSlice';\n\nexport const store = configureStore({\n  reducer: {\n    products: productsReducer,\n    productDetails: productDetailsReducer,\n    cartItems: cartItemsSlice,\n    favouriteItems: favouriteItemsSlice,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n\n/* eslint-disable @typescript-eslint/indent */\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n/* eslint-enable @typescript-eslint/indent */\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use these hooks everywhere instead of useDispatch and useSelector\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","export default __webpack_public_path__ + \"static/media/logo.c9417692.svg\";","import { Link } from 'react-router-dom';\n\nimport LogoIcon from '../../images/logo.svg';\nimport './Logo.scss';\n\nexport const Logo = () => (\n  <Link to=\"/home\" className=\"Logo\">\n    <img\n      src={LogoIcon}\n      alt=\"Logo\"\n      width={40}\n      height={24}\n    />\n  </Link>\n);\n","import { NavLink, NavLinkProps } from 'react-router-dom';\nimport cn from 'classnames';\nimport { PageLinkType } from '../../types/PageLinkType';\n\nimport './PageLink.scss';\n\ntype Props = NavLinkProps & {\n  linkType: PageLinkType\n};\nexport const PageLink: React.FC<Props> = ({\n  linkType,\n  children,\n  ...props\n}) => (\n  <NavLink\n    {...props}\n    className={({ isActive }) => cn(\n      'PageLink',\n      {\n        PageLink_text: linkType === PageLinkType.TEXT,\n      },\n      {\n        PageLink_heart: linkType === PageLinkType.HEART,\n      },\n      {\n        PageLink_cart: linkType === PageLinkType.CART,\n      },\n      {\n        PageLink_active: isActive,\n      },\n    )}\n  >\n    {children}\n  </NavLink>\n);\n","import { PageLinkType } from '../../types/PageLinkType';\nimport { PageLink } from '../PageLink';\nimport './Nav.scss';\n\nexport const Nav = () => (\n  <nav className=\"Nav\">\n    <ul className=\"Nav-List\">\n      <li className=\"Nav-Item\">\n        <PageLink\n          to=\"/\"\n          linkType={PageLinkType.TEXT}\n        >\n          home\n        </PageLink>\n      </li>\n\n      <li className=\"Nav-Item\">\n        <PageLink\n          to=\"/phones\"\n          linkType={PageLinkType.TEXT}\n        >\n          phones\n        </PageLink>\n      </li>\n\n      <li className=\"Nav-Item\">\n        <PageLink\n          to=\"/tablets\"\n          linkType={PageLinkType.TEXT}\n        >\n          tablets\n        </PageLink>\n      </li>\n\n      <li className=\"Nav-Item\">\n        <PageLink\n          to=\"/accessories\"\n          linkType={PageLinkType.TEXT}\n        >\n          accessories\n        </PageLink>\n      </li>\n    </ul>\n  </nav>\n);\n","import cn from 'classnames';\n\nimport './Counter.scss';\n\ntype Props = {\n  quantity: number;\n};\n\nexport const Counter: React.FC<Props> = ({ quantity }) => {\n  return (\n    <div\n      className={cn(\n        'Counter',\n        { Counter_active: quantity > 0 },\n      )}\n    >\n      {quantity}\n    </div>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const debounce = (\n  callback: (...args: any[]) => void,\n  delay: number,\n) => {\n  let timerId = 0;\n\n  return (...args: any[]) => {\n    window.clearTimeout(timerId);\n\n    timerId = window.setTimeout(() => {\n      callback(...args);\n    }, delay);\n  };\n};\n","export const enum ProductType {\n  PHONE = 'phone',\n  TABLET = 'tablet',\n  ACCESSORY = 'accessory',\n}\n","import {\n  useCallback, useEffect, useMemo, useState,\n} from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { getSearchWith } from '../../utils/getSearchWith';\nimport { debounce } from '../../utils/debounce';\n\nimport './Search.scss';\n\nconst delay = 600;\n\nexport const Search = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryParam = searchParams.get('query') || '';\n  const [query, setQuery] = useState(queryParam);\n\n  const location = useLocation();\n\n  const currentPath = useMemo(() => {\n    return location.pathname.split('/')\n      .filter(name => name !== '');\n  }, [location]);\n\n  useEffect(() => {\n    setQuery(queryParam);\n  }, [currentPath]);\n\n  const applyQuery = useCallback(\n    debounce(setSearchParams, delay),\n    [currentPath],\n  );\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setQuery(value);\n\n    applyQuery(\n      getSearchWith(searchParams, { query: value || null, page: '1' }),\n    );\n  };\n\n  const clearQuery = () => {\n    setQuery('');\n\n    setSearchParams(\n      getSearchWith(searchParams, { query: null }),\n    );\n  };\n\n  return (\n    <div className=\"Header-Search Search\">\n      <input\n        className={cn(\n          'Search-Input',\n          {\n            'Search-Input_icon_search': query === '',\n          },\n        )}\n        type=\"text\"\n        placeholder={`Search in ${currentPath} ...`}\n        value={query}\n        onChange={handleChange}\n      />\n\n      <button\n        className={cn(\n          'Search-ClearButton',\n          {\n            'Search-ClearButton_active': query !== '',\n          },\n        )}\n        type=\"button\"\n        data-cy=\"searchDelete\"\n        aria-label=\"clear\"\n        onClick={clearQuery}\n      />\n    </div>\n  );\n};\n","import { useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useAppSelector } from '../../app/hooks';\nimport { PageLinkType } from '../../types/PageLinkType';\nimport { Logo } from '../Logo';\nimport { Nav } from '../Nav';\nimport { PageLink } from '../PageLink';\nimport { Counter } from '../Counter';\nimport { Search } from '../Search';\n\nimport './Header.scss';\n\nconst validSearchPathes = [\n  '/phones',\n  '/tablets',\n  '/accessories',\n  '/favourites',\n];\n\nexport const Header = () => {\n  const { cartItems } = useAppSelector(state => state.cartItems);\n  const cartQuantity = useMemo(() => {\n    return cartItems.reduce((acc, cartItem) => {\n      return acc + cartItem.quantity;\n    }, 0);\n  }, [cartItems]);\n\n  const { favouriteItems } = useAppSelector(state => state.favouriteItems);\n  const favouriteQuantity = useMemo(() => {\n    return favouriteItems.length;\n  }, [favouriteItems]);\n\n  const location = useLocation();\n  const isCartPage = useMemo(() => {\n    return location.pathname === '/cart';\n  }, [location]);\n\n  const isVisibleSearch = useMemo(() => {\n    return validSearchPathes.some(path => path === location.pathname);\n  }, [location]);\n\n  return (\n    <header className=\"Page-Header Header\">\n      <div className=\"Header-Left\">\n        <Logo />\n\n        <Nav />\n      </div>\n\n      <div className=\"Header-Right\">\n        {isVisibleSearch && <Search />}\n\n        {!isCartPage && (\n          <PageLink\n            to=\"/favourites\"\n            linkType={PageLinkType.HEART}\n          >\n            <Counter quantity={favouriteQuantity} />\n          </PageLink>\n        )}\n\n        <PageLink\n          to=\"/cart\"\n          linkType={PageLinkType.CART}\n        >\n          <Counter quantity={cartQuantity} />\n        </PageLink>\n      </div>\n    </header>\n  );\n};\n","import { Logo } from '../Logo';\nimport './Footer.scss';\n\nexport const Footer = () => (\n  <footer className=\"Page-Footer Footer\">\n    <div className=\"Container\">\n      <div className=\"Footer-Content\">\n        <Logo />\n\n        <nav className=\"Footer-Nav\">\n          <ul className=\"Footer-List\">\n            <li>\n              <a\n                className=\"Footer-Link\"\n                rel=\"noreferrer\"\n                target=\"_blank\"\n                href=\"https://github.com/yuran007\"\n              >\n                github\n              </a>\n            </li>\n\n            <li>\n              <a\n                className=\"Footer-Link\"\n                rel=\"noreferrer\"\n                target=\"_blank\"\n                href=\"https://github.com/yuran007\"\n              >\n                contacts\n              </a>\n            </li>\n\n            <li>\n              <a\n                className=\"Footer-Link\"\n                rel=\"noreferrer\"\n                target=\"_blank\"\n                href=\"https://github.com/yuran007\"\n              >\n                rights\n              </a>\n            </li>\n          </ul>\n        </nav>\n\n        <button\n          className=\"Footer-Button\"\n          type=\"button\"\n          onClick={() => window.scrollTo(0, 0)}\n        >\n          Back&nbsp;to&nbsp;top\n        </button>\n      </div>\n    </div>\n  </footer>\n);\n","import { Outlet } from 'react-router-dom';\nimport { Header } from './components/Header';\nimport { Footer } from './components/Footer';\n\nimport './App.scss';\n\nconst App = () => (\n  <>\n    <Header />\n\n    <main className=\"Page-Main\">\n      <div className=\"Container\">\n        <Outlet />\n      </div>\n    </main>\n\n    <Footer />\n  </>\n);\n\nexport default App;\n","import { Product } from '../types/Product';\n\nexport const getProductDiscount = ({ price, discount }: Product) => {\n  return price - discount * (price / 100);\n};\n","import { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { addToCart } from '../../features/cartItemsSlice';\nimport {\n  addToFavourites,\n  removeFromFavourites,\n} from '../../features/favouriteItemsSlice';\nimport { Product } from '../../types/Product';\nimport { getProductDiscount } from '../../utils/getProductDiscount';\n\nimport './ProductCard.scss';\n\nconst IMG_SIZE = 208;\n\ntype Props = {\n  product: Product\n};\n\nexport const ProductCard: React.FC<Props> = ({ product }) => {\n  const dispatch = useAppDispatch();\n\n  const { cartItems } = useAppSelector(state => state.cartItems);\n  const isItemInCart = useMemo(() => {\n    return cartItems.some(item => item.id === product.id);\n  }, [cartItems]);\n\n  const addProductToCart = () => dispatch(\n    addToCart(\n      {\n        id: product.id,\n        product,\n        quantity: 1,\n      },\n    ),\n  );\n\n  const { favouriteItems } = useAppSelector(state => state.favouriteItems);\n  const isItemInFavourites = useMemo(() => {\n    return favouriteItems.some(item => item.id === product.id);\n  }, [favouriteItems]);\n\n  const toggleFavoriteProduct = () => {\n    if (isItemInFavourites) {\n      dispatch(removeFromFavourites(product.id));\n\n      return;\n    }\n\n    dispatch(addToFavourites(product));\n  };\n\n  const {\n    imageUrl,\n    name,\n    price,\n    screen,\n    capacity,\n    ram,\n    id,\n    type,\n  } = product;\n\n  const discountPrice = useMemo(() => {\n    return getProductDiscount(product);\n  }, [product]);\n\n  const productDetailsPath = `/${type}s/${id}`;\n\n  return (\n    <article className=\"ProductCard\">\n      <div className=\"ProductCard-ImgContainer\">\n        <Link to={productDetailsPath}>\n          <img\n            className=\"ProductCard-Img\"\n            src={imageUrl}\n            alt=\"ProductCard\"\n            width={IMG_SIZE}\n            height={IMG_SIZE}\n            loading=\"eager\"\n            decoding=\"async\"\n          />\n        </Link>\n      </div>\n\n      <div className=\"ProductCard-Content\">\n        <Link to={productDetailsPath}>\n          <h2 className=\"ProductCard-Title\">{name}</h2>\n        </Link>\n\n        <div className=\"ProductCard-Prices\">\n          <span className=\"ProductCard-DiscountPrice\">\n            {`$${discountPrice}`}\n          </span>\n\n          {discountPrice !== price\n            && (\n              <span className=\"ProductCard-Price\">\n                {`$${price}`}\n              </span>\n            )}\n        </div>\n\n        <hr className=\"ProductCard-Break\" />\n\n        <div className=\"ProductCard-Specs\">\n          <div className=\"ProductCard-Spec\">\n            <span className=\"ProductCard-SpecText\">Screen</span>\n            <span className=\"ProductCard-SpecValue\">{screen}</span>\n          </div>\n\n          <div className=\"ProductCard-Spec\">\n            <span className=\"ProductCard-SpecText\">Capacity</span>\n            <span className=\"ProductCard-SpecValue\">{capacity}</span>\n          </div>\n\n          <div className=\"ProductCard-Spec\">\n            <span className=\"ProductCard-SpecText\">RAM</span>\n            <span className=\"ProductCard-SpecValue\">{ram}</span>\n          </div>\n        </div>\n\n        <div className=\"ProductCard-Buttons\">\n          <button\n            className={cn(\n              'ProductCard-Button',\n              'Button',\n              { Button_in_cart: isItemInCart },\n            )}\n            type=\"button\"\n            disabled={isItemInCart}\n            onClick={addProductToCart}\n          >\n            {isItemInCart\n              ? 'Added to cart'\n              : 'Add to cart'}\n          </button>\n\n          <button\n            className={cn(\n              'ProductCard-Icon Icon',\n              {\n                Icon_heart: !isItemInFavourites,\n                Icon_heart_in_favoutites: isItemInFavourites,\n              },\n            )}\n            type=\"button\"\n            aria-label=\"Heart\"\n            onClick={toggleFavoriteProduct}\n          />\n        </div>\n      </div>\n    </article>\n  );\n};\n","import { useMemo, useState } from 'react';\nimport { Product } from '../../types/Product';\nimport { ProductCard } from '../ProductCard';\n\nimport './ProductsSlider.scss';\n\nconst CARD_WIDTH = 272;\nconst CARD_COUNT = 4;\nconst GAP = 16;\nconst SLIDE_WINDOW = CARD_COUNT * (CARD_WIDTH + GAP);\nconst MIN_OFFSET = 0;\n\ntype Props = {\n  products: Product[],\n  title: string,\n};\n\nexport const ProductsSlider: React.FC<Props> = ({ products, title }) => {\n  const [offsetWidth, setOffsetWidth] = useState(0);\n  const maxOffset = useMemo(() => {\n    return Math.floor(-SLIDE_WINDOW * (products.length / CARD_COUNT - 1));\n  }, [products]);\n\n  const sliderWidth = useMemo(() => {\n    return products.length * CARD_WIDTH + (products.length - 1) * GAP;\n  }, [products]);\n\n  const styleProductList = {\n    width: `${sliderWidth}px`,\n    transform: `TranslateX(${offsetWidth}px)`,\n  };\n\n  const slideLeft = () => {\n    setOffsetWidth(currentOffset => {\n      return Math.min(currentOffset + SLIDE_WINDOW, MIN_OFFSET);\n    });\n  };\n\n  const slideRight = () => {\n    setOffsetWidth(currentOffset => {\n      return Math.max(currentOffset - SLIDE_WINDOW, maxOffset);\n    });\n  };\n\n  return (\n    <div className=\"ProductsSlider\">\n      <div className=\"ProductsSlider-Top\">\n        <h2 className=\"ProductsSlider-Title SectionTitle\">\n          {title}\n        </h2>\n\n        <button\n          className=\"ProductsSlider-Icon Icon Icon_arrow Icon_arrow_left\"\n          type=\"button\"\n          aria-label=\"Arrow left\"\n          onClick={slideLeft}\n          disabled={offsetWidth === MIN_OFFSET}\n        />\n\n        <button\n          className=\"ProductsSlider-Icon Icon Icon_arrow\"\n          type=\"button\"\n          aria-label=\"Arrow Right\"\n          onClick={slideRight}\n          disabled={offsetWidth === maxOffset}\n        />\n      </div>\n\n      <div className=\"ProductsSlider-Window\">\n        <div\n          className=\"ProductsSlider-Slides\"\n          data-cy=\"cardsContainer\"\n          style={styleProductList}\n        >\n          {products.map(product => (\n            <ProductCard\n              key={product.id}\n              product={product}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/phones.e8ce0c8a.png\";","export const enum SortBy {\n  AGE = 'age',\n  NAME = 'name',\n  PRICE = 'price',\n}\n","export default __webpack_public_path__ + \"static/media/tablets.985d7169.png\";","export default __webpack_public_path__ + \"static/media/accessories.ca41c40d.png\";","import { ProductType } from '../types/ProductType';\nimport phoneImgPath from '../images/category/phones.png';\nimport tabletImgPath from '../images/category/tablets.png';\nimport accessoriesImgPath from '../images/category/accessories.png';\n\nexport const getCategoryData = (productType: ProductType) => {\n  switch (productType) {\n    case ProductType.PHONE:\n      return {\n        title: 'Mobile phones',\n        imgPath: phoneImgPath,\n        linkPath: '/phone',\n      };\n\n    case ProductType.TABLET:\n      return {\n        title: 'Tablets',\n        imgPath: tabletImgPath,\n        linkPath: '/tablets',\n      };\n\n    case ProductType.ACCESSORY:\n      return {\n        title: 'Accessories',\n        imgPath: accessoriesImgPath,\n        linkPath: '/accessories',\n      };\n\n    default:\n      return {\n        title: '',\n        imgPath: '',\n        linkPath: '',\n      };\n  }\n};\n","export const formatTotal = (total: number, word: string) => {\n  return `${total} ${total > 1 ? `${word}s` : word}`;\n};\n","import { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { useAppSelector } from '../../app/hooks';\nimport { ProductType } from '../../types/ProductType';\nimport { getCategoryData } from '../../utils/getCategoryData';\nimport { countProductByCategory } from '../../utils/countProductByCategory';\nimport { formatTotal } from '../../utils/formatTotal';\n\nimport './Category.scss';\n\nconst IMG_SIZE = 368;\n\ntype Props = {\n  productType: ProductType,\n};\n\nexport const Category: React.FC<Props> = ({ productType }) => {\n  const { products } = useAppSelector(state => state.products);\n\n  const { linkPath, imgPath, title } = getCategoryData(productType);\n\n  const countProduct = useMemo(() => {\n    return countProductByCategory(products, productType);\n  }, [products, productType]);\n\n  const totalProduct = formatTotal(countProduct, 'model');\n\n  return (\n    <article className=\"ShopByCategory-Category Category\">\n      <Link\n        to={linkPath}\n        className=\"Category-Link\"\n      >\n        <div className={cn(\n          'Category-Container',\n          {\n            'Category-Container_mobile': productType === ProductType.PHONE,\n            'Category-Container_tablet': productType === ProductType.TABLET,\n            // eslint-disable-next-line max-len\n            'Category-Container_accessory': productType === ProductType.ACCESSORY,\n          },\n        )}\n        >\n          <img\n            className=\"Category-Img\"\n            src={imgPath}\n            alt={title}\n            width={IMG_SIZE}\n            height={IMG_SIZE}\n            loading=\"lazy\"\n            decoding=\"async\"\n          />\n        </div>\n\n        <h3 className=\"Category-Title\">{title}</h3>\n      </Link>\n\n      <div className=\"Category-Total Total\">{totalProduct}</div>\n    </article>\n  );\n};\n","import { Product } from '../types/Product';\nimport { ProductType } from '../types/ProductType';\n\nexport const countProductByCategory = (\n  products: Product[],\n  productType: ProductType,\n) => {\n  return products\n    .filter(product => product.type === productType)\n    .length;\n};\n","import { Category } from '../Category';\nimport { ProductType } from '../../types/ProductType';\n\nimport './ShopByCategory.scss';\n\nexport const ShopByCategory = () => (\n  <div className=\"ShopByCategory\">\n    <h2 className=\"ShopByCategory-Title SectionTitle\">\n      Shop by category\n    </h2>\n\n    <div\n      className=\"ShopByCategory-Content\"\n      data-cy=\"categoryLinksContainer\"\n    >\n      <Category productType={ProductType.PHONE} />\n\n      <Category productType={ProductType.TABLET} />\n\n      <Category productType={ProductType.ACCESSORY} />\n    </div>\n  </div>\n\n);\n","export default __webpack_public_path__ + \"static/media/banner-phones.b4eeda8b.png\";","export default __webpack_public_path__ + \"static/media/banner-tablets.a962057c.png\";","export default __webpack_public_path__ + \"static/media/banner-accessories.bdd2e0fc.png\";","import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport bannerPhones from '../../images/banner/banner-phones.png';\nimport bannerTablets from '../../images/banner/banner-tablets.png';\nimport bannerAccessories from '../../images/banner/banner-accessories.png';\n\nimport './Slider.scss';\n\nconst IMG_HEIGHT = 400;\nconst IMG_WIDTH = 1040;\nconst IMG_TOTAL = 3;\nconst SLIDE_WINDOW = IMG_WIDTH;\nconst MIN_OFFSET = 0;\nconst MAX_OFFSET = -SLIDE_WINDOW * (IMG_TOTAL - 1);\nconst TIME_OUT = 5000;\n\nexport const Slider = () => {\n  const [offsetWidth, setOffsetWidth] = useState(0);\n\n  const isFirstSlide = offsetWidth === MIN_OFFSET;\n  const isLastSlide = offsetWidth === MAX_OFFSET;\n\n  const handleSlideLeft = () => {\n    setOffsetWidth(currentOffset => {\n      if (isFirstSlide) {\n        return MAX_OFFSET;\n      }\n\n      return currentOffset + SLIDE_WINDOW;\n    });\n  };\n\n  const handleSlideRight = () => {\n    setOffsetWidth(currentOffset => {\n      if (isLastSlide) {\n        return MIN_OFFSET;\n      }\n\n      return currentOffset - SLIDE_WINDOW;\n    });\n  };\n\n  const isDotActive = (dotIndex: number) => {\n    return Math.abs(offsetWidth / SLIDE_WINDOW) === dotIndex;\n  };\n\n  useEffect(() => {\n    const intervalID = window.setInterval(() => {\n      handleSlideRight();\n    }, TIME_OUT);\n\n    return () => {\n      window.clearInterval(intervalID);\n    };\n  }, [offsetWidth]);\n\n  return (\n    <div className=\"Slider\">\n      <div className=\"Slider-Content\">\n        <button\n          className=\"Slider-Icon Icon Icon_arrow Icon_arrow_left\"\n          type=\"button\"\n          aria-label=\"Arrow Left\"\n          onClick={handleSlideLeft}\n        />\n\n        <div className=\"Slider-Window\">\n          <div\n            className=\"Slider-Slides\"\n            style={{\n              transform: `TranslateX(${offsetWidth}px)`,\n            }}\n          >\n            <Link to=\"/phones\">\n              <img\n                className=\"Slider-Slide\"\n                src={bannerPhones}\n                alt=\"Slider banner\"\n                width={IMG_WIDTH}\n                height={IMG_HEIGHT}\n                loading=\"lazy\"\n                decoding=\"async\"\n              />\n            </Link>\n\n            <Link to=\"/tablets\">\n              <img\n                className=\"Slider-Slide\"\n                src={bannerTablets}\n                alt=\"Slider banner\"\n                width={IMG_WIDTH}\n                height={IMG_HEIGHT}\n                loading=\"lazy\"\n                decoding=\"async\"\n              />\n            </Link>\n\n            <Link to=\"/accessories\">\n              <img\n                className=\"Slider-Slide\"\n                src={bannerAccessories}\n                alt=\"Slider banner\"\n                width={IMG_WIDTH}\n                height={IMG_HEIGHT}\n                loading=\"lazy\"\n                decoding=\"async\"\n              />\n            </Link>\n          </div>\n        </div>\n\n        <button\n          className=\"Slider-Icon Icon Icon_arrow\"\n          type=\"button\"\n          aria-label=\"Arrow right\"\n          onClick={handleSlideRight}\n        />\n      </div>\n\n      <div className=\"Slider-Dots\">\n        {[0, 1, 2].map(dotIndex => (\n          // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\n          <span\n            key={dotIndex}\n            className={cn(\n              'Slider-Dot',\n              {\n                'Slider-Dot_active': isDotActive(dotIndex),\n              },\n            )}\n            onClick={() => {\n              setOffsetWidth(-dotIndex * SLIDE_WINDOW);\n            }}\n          />\n        ))}\n      </div>\n    </div>\n\n  );\n};\n","import { useEffect, useMemo } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { fetchProducts } from '../../features/productsSlice';\nimport { getProductDiscount } from '../../utils/getProductDiscount';\nimport { ProductsSlider } from '../../components/ProductsSlider';\nimport { ShopByCategory } from '../../components/ShopByCategory';\nimport { Slider } from '../../components/Slider';\n\nexport const HomePage = () => {\n  const dispatch = useAppDispatch();\n  const { products } = useAppSelector(state => state.products);\n\n  useEffect(() => {\n    dispatch(fetchProducts());\n  }, []);\n\n  const getHotPriceProducts = useMemo(() => {\n    return products\n      .filter(product => product.discount !== 0)\n      .sort((a, b) => getProductDiscount(a) - getProductDiscount(b));\n  }, [products]);\n\n  const getBrandNewProducts = useMemo(() => {\n    return products\n      .filter(product => product.discount === 0)\n      .sort((a, b) => a.price - b.price);\n  }, [products]);\n\n  return (\n    <>\n      <section className=\"Page-Slider\">\n        <Slider />\n      </section>\n\n      <section className=\"Page-HotPrice\">\n        <ProductsSlider\n          products={getHotPriceProducts}\n          title=\"Hot prices\"\n        />\n      </section>\n\n      <section className=\"Page-ShopByCategory\">\n        <ShopByCategory />\n      </section>\n\n      <section className=\"Page-BrandNew\">\n        <ProductsSlider\n          products={getBrandNewProducts}\n          title=\"Brand new models\"\n        />\n      </section>\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchWith } from '../../utils/getSearchWith';\nimport { getDropDownText } from '../../utils/getDropDownText';\nimport { SelectOption } from '../../types/SelectOption';\n\nimport './DropDown.scss';\n\ntype Props = {\n  options: SelectOption[];\n  label: string;\n  searchParamName: string;\n};\n\nexport const DropDown: React.FC<Props> = ({\n  options,\n  label,\n  searchParamName,\n}) => {\n  const [isActive, setIsActive] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchParam = searchParams.get(searchParamName) || options[0].label;\n\n  const buttonText = getDropDownText(searchParam, options) || searchParam;\n\n  const searchParamClick = (option: SelectOption) => {\n    const newParams = { [searchParamName]: option.value, page: '1' };\n\n    setSearchParams(\n      getSearchWith(searchParams, newParams),\n    );\n\n    setIsActive(false);\n  };\n\n  useEffect(() => {\n    if (!isActive) {\n      return;\n    }\n\n    const handleDocumentClick = () => {\n      setIsActive(false);\n    };\n\n    document.addEventListener('click', handleDocumentClick);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      document.removeEventListener('click', handleDocumentClick);\n    };\n  }, [isActive]);\n\n  return (\n    <div className=\"DropDown\">\n      <span className=\"DropDown-Label\">\n        {label}\n      </span>\n\n      <button\n        type=\"button\"\n        className={cn('DropDown-Button', {\n          'DropDown-Button_active': isActive,\n        })}\n        onClick={() => setIsActive(active => !active)}\n      >\n        {buttonText}\n\n        <span\n          className={cn('DropDown-Icon Icon Icon_arrow', {\n            Icon_arrow_down: !isActive,\n            Icon_arrow_up: isActive,\n          })}\n        />\n      </button>\n\n      <ul\n        className={cn('DropDown-List', {\n          'DropDown-List_active': isActive,\n        })}\n      >\n        {options.map(option => (\n          <li key={option.label}>\n            <button\n              type=\"button\"\n              className=\"DropDown-Option\"\n              onClick={() => searchParamClick(option)}\n            >\n              {option.label}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { SelectOption } from '../types/SelectOption';\n\nexport const getDropDownText = (\n  value: string,\n  selectOptions: SelectOption[],\n) => {\n  return selectOptions.find(option => option.value === value)?.label;\n};\n","import { SortBy } from '../../types/SortBy';\nimport { DropDown } from '../DropDown';\n\nimport './ProductListFilter.scss';\n\nconst sortOptions = [\n  { label: 'Newest', value: SortBy.AGE },\n  { label: 'Alphabetically', value: SortBy.NAME },\n  { label: 'Cheapest', value: SortBy.PRICE },\n];\n\nconst perPageOptions = [\n  { label: 'All', value: 'all' },\n  { label: '16', value: '16' },\n  { label: '8', value: '8' },\n  { label: '4', value: '4' },\n];\n\nexport const ProductListFilter = () => {\n  return (\n    <div className=\"ProductListFilter\">\n      <DropDown\n        options={sortOptions}\n        label=\"Sort by\"\n        searchParamName=\"sort\"\n      />\n\n      <DropDown\n        options={perPageOptions}\n        label=\"Items on page\"\n        searchParamName=\"perPage\"\n      />\n    </div>\n  );\n};\n","import { ProductCard } from '../ProductCard';\nimport { Product } from '../../types/Product';\n\nimport './ProductList.scss';\n\ntype Props = {\n  products: Product[]\n};\n\nexport const ProductList: React.FC<Props> = ({ products }) => (\n  <div\n    className=\"ProductList\"\n    data-cy=\"productList\"\n  >\n    {products.map(product => (\n      <ProductCard key={product.id} product={product} />\n    ))}\n  </div>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { SearchParams, getSearchWith } from '../../utils/getSearchWith';\n// import { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import { useMemo } from 'react';\nimport cn from 'classnames';\nimport { SearchLink } from '../SearchLink';\nimport { getPageNumbers } from '../../utils/getPageNumbers';\n\nimport './Pagination.scss';\n\ninterface Prop {\n  total: number,\n  perPage: number,\n  currentPage: number,\n}\nexport const Pagination: React.FC<Prop> = ({\n  total,\n  perPage,\n  currentPage,\n}) => {\n  const totalPages = useMemo(() => {\n    return Math.ceil(total / perPage);\n  }, [total, perPage]);\n\n  const pageNumbers = useMemo(() => {\n    return getPageNumbers(1, totalPages);\n  }, [totalPages]);\n\n  return (\n    <div\n      className=\"Pagination\"\n      data-cy=\"pagination\"\n    >\n      <div\n        className={cn(\n          'Icon',\n          'Icon_arrow',\n          'Icon_arrow_left',\n          { Icon_arrow_disabled: currentPage === 1 },\n        )}\n      >\n        <SearchLink\n          className=\"Pagination-Link\"\n          data-cy=\"paginationLeft\"\n          aria-label=\"pagination-left\"\n          params={{ page: `${currentPage - 1}` }}\n        />\n      </div>\n\n      <ul className=\"Pagination-List\">\n        {pageNumbers.map(page => (\n          <li\n            key={page}\n            className={cn(\n              'Pagination-Item',\n              { 'Pagination-Item_active': currentPage === page },\n            )}\n          >\n            <SearchLink\n              className=\"Pagination-Link\"\n              params={{ page: `${page}` }}\n            >\n              {page}\n            </SearchLink>\n          </li>\n        ))}\n      </ul>\n\n      <div\n        className={cn(\n          'Icon',\n          'Icon_arrow',\n          { Icon_arrow_disabled: currentPage === totalPages },\n        )}\n      >\n        <SearchLink\n          className=\"Pagination-Link\"\n          data-cy=\"paginationRight\"\n          aria-label=\"pagination-right\"\n          params={{ page: `${currentPage + 1}` }}\n        />\n      </div>\n    </div>\n  );\n};\n","export function getPageNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import { ProductType } from '../../types/ProductType';\n\nimport './NoResults.scss';\n\ntype Props = {\n  productType: ProductType\n};\n\nexport const NoResults: React.FC<Props> = ({ productType }) => {\n  const categoryTitle = {\n    [ProductType.PHONE]: 'Mobile phones',\n    [ProductType.TABLET]: 'Tablets',\n    [ProductType.ACCESSORY]: 'Accessories',\n  };\n\n  return (\n    <section className=\"Page-NoResults NoResults\">\n      {`${categoryTitle[productType]} not found`}\n    </section>\n  );\n};\n","import { ProductType } from '../../types/ProductType';\nimport './NoSearchResults.scss';\n\ntype Props = {\n  productType: ProductType\n};\n\nexport const NoSearchResults: React.FC<Props> = ({ productType }) => {\n  const categoryTitle = {\n    [ProductType.PHONE]: 'Mobile phones',\n    [ProductType.TABLET]: 'Tablets',\n    [ProductType.ACCESSORY]: 'Accessories',\n  };\n\n  return (\n    <section className=\"Page-NoResults NoResults\">\n      {`Not found ${categoryTitle[productType]} matching the query.`}\n    </section>\n  );\n};\n","import { Product } from '../types/Product';\n\nexport const containQuery = (product: Product, query: string): boolean => {\n  return product.name.toLowerCase()\n    .includes(query.toLowerCase());\n};\n","import { useMemo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Product } from '../types/Product';\nimport { ProductType } from '../types/ProductType';\nimport { SortBy } from '../types/SortBy';\nimport { containQuery } from '../utils/containQuery';\nimport { compareProducts } from '../utils/compareProducts';\n\nconst useProductsByType = (products: Product[], productType: ProductType) => {\n  const productsByType = useMemo(() => {\n    return products\n      .filter(product => product.type === productType);\n  }, [products, productType]);\n\n  return productsByType;\n};\n\nconst useSearchedProducts = (\n  products: Product[],\n  productType: ProductType,\n) => {\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n\n  const productsByType = useProductsByType(products, productType);\n\n  const searchedProducts = useMemo(() => {\n    return query\n      ? productsByType.filter(product => containQuery(product, query))\n      : productsByType;\n  }, [productsByType, query]);\n\n  return searchedProducts;\n};\n\nexport const useSortedProducts = (\n  products: Product[],\n  productType: ProductType,\n) => {\n  const [searchParams] = useSearchParams();\n  const sortBy = (searchParams.get('sort') || '') as SortBy;\n\n  const searchedProducts = useSearchedProducts(products, productType);\n\n  const sortedProducts = useMemo(() => {\n    return sortBy\n      ? [...searchedProducts]\n        .sort((product1, product2) => {\n          return compareProducts(product1, product2, sortBy);\n        })\n      : searchedProducts;\n  }, [searchedProducts, sortBy]);\n\n  return sortedProducts;\n};\n\nexport const useProductsPerPage = (\n  products: Product[],\n  productType: ProductType,\n) => {\n  const sortedProducts = useSortedProducts(products, productType);\n\n  const [searchParams] = useSearchParams();\n  const perPageParam = searchParams.get('perPage') || '';\n\n  const productsPerPage = useMemo(() => {\n    return Number(perPageParam) || sortedProducts.length;\n  }, [perPageParam, sortedProducts]);\n\n  return productsPerPage;\n};\n\nexport const usePaginatedProducts = (\n  products: Product[],\n  productType: ProductType,\n) => {\n  const sortedProducts = useSortedProducts(\n    products, productType,\n  );\n\n  const productsPerPage = useProductsPerPage(\n    products, productType,\n  );\n\n  const [searchParams] = useSearchParams();\n  const currentPage = Number(searchParams.get('page')) || 1;\n\n  const firstItem = useMemo(() => {\n    return (currentPage - 1) * productsPerPage;\n  }, [currentPage, productsPerPage]);\n\n  const lastItem = useMemo(() => {\n    const sortedProductsTotal = sortedProducts.length;\n\n    return Math.min(currentPage * productsPerPage, sortedProductsTotal);\n  }, [currentPage, productsPerPage, sortedProducts]);\n\n  const paginatedProducts = useMemo(() => {\n    return sortedProducts\n      .filter((_, index) => index >= firstItem && index < lastItem);\n  }, [sortedProducts, firstItem, lastItem]);\n\n  return paginatedProducts;\n};\n","import { Product } from '../types/Product';\nimport { SortBy } from '../types/SortBy';\nimport { getProductDiscount } from './getProductDiscount';\n\nexport const compareProducts = (\n  product1: Product,\n  product2: Product,\n  sortBy: SortBy,\n) => {\n  switch (sortBy) {\n    case SortBy.AGE:\n      return product1.age - product2.age;\n\n    case SortBy.PRICE:\n      return getProductDiscount(product1) - getProductDiscount(product2);\n\n    case SortBy.NAME:\n      return product1.name.localeCompare(product2.name);\n\n    default:\n      return 0;\n  }\n};\n","import { useMemo } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport './Breadcrumbs.scss';\n\nexport const Breadcrumbs = () => {\n  const location = useLocation();\n\n  let currentPath = '';\n\n  const crumbs = useMemo(() => {\n    return location.pathname\n      .split('/')\n      .filter(crumb => crumb !== '')\n      .map((crumb, index, arr) => {\n        currentPath += `/${crumb}`;\n\n        return (\n          <li\n            key={crumb}\n            className=\"Breadcrumbs-Item\"\n          >\n            {index !== arr.length - 1\n              ? (\n                <Link\n                  className=\"Breadcrumbs-Link\"\n                  to={currentPath}\n                >\n                  {crumb}\n                </Link>\n              )\n              : crumb}\n          </li>\n        );\n      });\n  }, [location]);\n\n  return (\n    <div\n      className=\"Breadcrumbs\"\n      data-cy=\"breadCrumbs\"\n    >\n      <ul className=\"Breadcrumbs-List\">\n        <li\n          key=\"homePath\"\n          className=\"Breadcrumbs-Item\"\n        >\n          <Link\n            className=\"Breadcrumbs-Icon Icon Icon_home\"\n            to=\"/home\"\n          />\n        </li>\n\n        {crumbs.map(crumb => crumb)}\n      </ul>\n    </div>\n  );\n};\n","import React, { useEffect, useMemo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { fetchProducts } from '../../features/productsSlice';\nimport { ProductListFilter } from '../../components/ProductListFilter';\nimport { ProductList } from '../../components/ProductList';\nimport { Loader } from '../../components/Loader';\nimport { Pagination } from '../../components/Pagination';\nimport { ProductType } from '../../types/ProductType';\nimport { Status } from '../../types/Status';\nimport { NoResults } from '../../components/NoResults';\nimport { NoSearchResults } from '../../components/NoSearchResults';\nimport {\n  usePaginatedProducts,\n  useProductsPerPage,\n  useSortedProducts,\n} from '../../hooks/useProducts';\nimport { Breadcrumbs } from '../../components/Breadcrumbs';\nimport { formatTotal } from '../../utils/formatTotal';\n\nimport './ProductsPage.scss';\nimport { getCategoryData } from '../../utils/getCategoryData';\n\ntype Props = {\n  productType: ProductType;\n};\n\nexport const ProductsPage :React.FC<Props> = ({ productType }) => {\n  const dispatch = useAppDispatch();\n\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const currentPage = Number(searchParams.get('page')) || 1;\n\n  const { products, status } = useAppSelector(state => state.products);\n\n  useEffect(() => {\n    dispatch(fetchProducts());\n  }, []);\n\n  const sortedProducts = useSortedProducts(products, productType);\n\n  const sortedProductsTotal = useMemo(() => {\n    return sortedProducts.length;\n  }, [sortedProducts]);\n\n  const isEmptySortedPoducts = useMemo(() => {\n    return sortedProducts.length === 0;\n  }, [sortedProducts]);\n\n  const isEmptyQuery = useMemo(() => {\n    return query === '';\n  }, [query]);\n\n  const productsPerPage = useProductsPerPage(products, productType);\n\n  const paginatedProducts = usePaginatedProducts(products, productType);\n\n  const totalModelString = formatTotal(sortedProductsTotal, 'model');\n  const totalResultString = formatTotal(sortedProductsTotal, 'result');\n  const pageTitle = getCategoryData(productType).title;\n\n  return (\n    <section className=\"Page-Products Products\">\n      <Breadcrumbs />\n\n      <h1 className=\"Products-Title SectionTitle\">\n        {pageTitle}\n      </h1>\n\n      <div className=\"Products-Total Total\">\n        {status === Status.IDLE\n        && (query\n          ? totalResultString\n          : totalModelString)}\n      </div>\n\n      {status === Status.LOADING && <Loader />}\n\n      {status === Status.IDLE && isEmptySortedPoducts\n          && (isEmptyQuery\n            ? <NoResults productType={productType} />\n            : <NoSearchResults productType={productType} />)}\n\n      {status === Status.IDLE && !isEmptySortedPoducts\n          && (\n            <>\n              <ProductListFilter />\n\n              <ProductList products={paginatedProducts} />\n\n              {sortedProductsTotal >= productsPerPage\n                && (\n                  <Pagination\n                    total={sortedProductsTotal}\n                    perPage={productsPerPage}\n                    currentPage={currentPage}\n                  />\n                )}\n            </>\n          )}\n    </section>\n  );\n};\n","import { useNavigate } from 'react-router-dom';\n\nimport './BackButton.scss';\n\nexport const BackButton = () => {\n  const navigate = useNavigate();\n\n  return (\n    <button\n      className=\"BackButton\"\n      type=\"button\"\n      onClick={() => navigate(-1)}\n    >\n      <span className=\"BackButton-Icon Icon Icon_arrow Icon_arrow_left\" />\n      Back\n    </button>\n  );\n};\n","import { useEffect, useMemo, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { fetchProductDetails } from '../../features/productDetailsSlice';\nimport { fetchProducts } from '../../features/productsSlice';\nimport { addToCart } from '../../features/cartItemsSlice';\nimport {\n  addToFavourites,\n  removeFromFavourites,\n} from '../../features/favouriteItemsSlice';\nimport { Loader } from '../../components/Loader';\nimport { ProductsSlider } from '../../components/ProductsSlider';\nimport { Breadcrumbs } from '../../components/Breadcrumbs';\nimport { BackButton } from '../../components/BackButton';\nimport { getProductDiscount } from '../../utils/getProductDiscount';\nimport { Product } from '../../types/Product';\nimport { Status } from '../../types/Status';\n\nimport './ProductDetailsPage.scss';\n\nconst productColors = ['#fcdbc1', '#5f7170', '#4c4c4c', '#f0f0f0'];\nconst productCapacities = [64, 256, 512];\n\nexport const ProductDetailsPage = () => {\n  const [productImgId, SetProductImgId] = useState(0);\n  const [productColorId, SetProductColorId] = useState(0);\n  const [productCapacityId, SetProductCapacityId] = useState(0);\n\n  const dispatch = useAppDispatch();\n\n  const {\n    products,\n    status: productsStatus,\n  } = useAppSelector(state => state.products);\n\n  useEffect(() => {\n    dispatch(fetchProducts());\n  }, []);\n\n  const {\n    productDetails,\n    status: productDetailsStatus,\n  } = useAppSelector(state => state.productDetails);\n  const { productId } = useParams();\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(fetchProductDetails(productId));\n    }\n  }, [productId]);\n\n  const product = useMemo(() => {\n    return products.find(item => item.id === productId);\n  }, [products, productId]) as Product;\n\n  const discountPrice = useMemo(() => {\n    if (product) {\n      return getProductDiscount(product);\n    }\n\n    return 0;\n  }, [product]);\n\n  const suggestedProducts = useMemo(() => {\n    return products.filter((_, id) => id >= 4 && id < 16);\n  }, [products]);\n\n  const { cartItems } = useAppSelector(state => state.cartItems);\n\n  const isItemInCart = useMemo(() => {\n    return cartItems.some(item => item.id === productId);\n  }, [cartItems, product]);\n\n  const { favouriteItems } = useAppSelector(state => state.favouriteItems);\n  const isItemInFavourites = useMemo(() => {\n    return favouriteItems.some(item => item.id === productId);\n  }, [favouriteItems]);\n\n  const toggleFavoriteProduct = () => {\n    if (productId && isItemInFavourites) {\n      dispatch(removeFromFavourites(productId));\n\n      return;\n    }\n\n    dispatch(addToFavourites(product));\n  };\n\n  return (\n    <>\n      {(productDetailsStatus === Status.LOADING\n          || productsStatus === Status.LOADING)\n        && <Loader />}\n\n      {productDetailsStatus === Status.FAILED\n          && productsStatus === Status.IDLE\n          && (\n            <h1 className=\"ProductDetail-SectionTitle SectionTitle\">\n              Product was not found\n            </h1>\n          )}\n\n      {productDetailsStatus === Status.IDLE\n          && productsStatus === Status.IDLE\n        && (\n          <>\n            <Breadcrumbs />\n\n            <BackButton />\n\n            <section className=\"Page-Section ProductDetail\">\n              <h1 className=\"ProductDetail-SectionTitle SectionTitle\">\n                {productDetails?.name}\n              </h1>\n\n              <aside className=\"ProductDetail-ImagesContainer\">\n                <ul className=\"ProductDetail-ImgList\">\n                  {productDetails?.images.map((url, id) => (\n                    <li className=\"ProductDetail-ListItem\" key={url}>\n                      <button\n                        type=\"button\"\n                        className={cn(\n                          'ProductDetail-ImgButton',\n                          // eslint-disable-next-line max-len\n                          { 'ProductDetail-ImgButton_active': productImgId === id },\n                        )}\n                        onClick={() => SetProductImgId(id)}\n                      >\n                        <img\n                          className=\"ProductDetail-ImgSmall\"\n                          src={url}\n                          alt=\"product small\"\n                          width=\"80\"\n                          height=\"78\"\n                        />\n                      </button>\n\n                    </li>\n                  ))}\n                </ul>\n              </aside>\n\n              <img\n                className=\"ProductDetail-Img\"\n                src={productDetails?.images[productImgId]}\n                alt=\"product\"\n                width=\"464\"\n              />\n\n              <div className=\"ProductDetail-Right\">\n                <div className=\"ProductDetail-Colors\">\n                  <span className=\"ProductDetail-SelectLabel\">\n                    Available colors\n                  </span>\n\n                  <ul className=\"ProductDetail-SelectList\">\n                    {productColors.map((color, id) => (\n                      <li className=\"ProductDetail-ColorItem\" key={color}>\n                        <button\n                          className={cn(\n                            'ProductDetail-ColorButton',\n                            // eslint-disable-next-line max-len\n                            { 'ProductDetail-ColorButton_active': productColorId === id },\n                          )}\n                          type=\"button\"\n                          onClick={() => SetProductColorId(id)}\n                        >\n                          <span\n                            className=\"ProductDetail-ColorCircle\"\n                            style={{ backgroundColor: color }}\n                          />\n                        </button>\n                      </li>\n                    ))}\n                  </ul>\n\n                  <hr className=\"ProductDetail-Break\" />\n                </div>\n\n                <div className=\"ProductDetail-Capacities\">\n                  <span className=\"ProductDetail-SelectLabel\">\n                    Select capacity\n                  </span>\n\n                  <ul className=\"ProductDetail-SelectList\">\n                    {productCapacities.map((capacity, id) => (\n                      <li className=\"ProductDetail-CapacityItem\" key={capacity}>\n                        <button\n                          className={cn(\n                            'ProductDetail-CapacityButton',\n                            // eslint-disable-next-line max-len\n                            { 'ProductDetail-CapacityButton_active': productCapacityId === id },\n                          )}\n                          type=\"button\"\n                          onClick={() => SetProductCapacityId(id)}\n                        >\n                          {`${capacity} GB`}\n                        </button>\n                      </li>\n                    ))}\n                  </ul>\n\n                  <hr className=\"ProductDetail-Break\" />\n                </div>\n\n                <div className=\"ProductDetail-Prices\">\n                  <span className=\"ProductDetail-DiscountPrice\">\n                    {`$${discountPrice}`}\n                  </span>\n\n                  {product && discountPrice !== product.price\n                  && (\n                    <span className=\"ProductDetail-Price\">\n                      {`$${product.price}`}\n                    </span>\n                  )}\n                </div>\n\n                <div className=\"ProductDetail-Buttons\">\n                  <button\n                    className={cn(\n                      'ProductDetail-Button',\n                      'Button',\n                      { Button_in_cart: isItemInCart },\n                    )}\n                    type=\"button\"\n                    disabled={isItemInCart}\n                    onClick={() => dispatch(addToCart(\n                      {\n                        id: product.id,\n                        product,\n                        quantity: 1,\n                      },\n                    ))}\n                  >\n                    {isItemInCart\n                      ? 'Added to cart'\n                      : 'Add to cart'}\n                  </button>\n\n                  <button\n                    className={cn(\n                      'ProductDetail-Icon Icon',\n                      {\n                        Icon_heart: !isItemInFavourites,\n                        Icon_heart_in_favoutites: isItemInFavourites,\n                      },\n                    )}\n                    type=\"button\"\n                    aria-label=\"Heart\"\n                    onClick={toggleFavoriteProduct}\n                  />\n                </div>\n\n                <div className=\"ProductDetail-Specs\">\n                  <div className=\"ProductDetail-Spec\">\n                    <span className=\"ProductDetail-Label\">Screen</span>\n\n                    <span className=\"ProductDetail-Value\">\n                      {productDetails?.display.screenSize}\n                    </span>\n                  </div>\n\n                  <div className=\"ProductDetail-Spec\">\n                    <span className=\"ProductDetail-Label\">Resolution</span>\n\n                    <span className=\"ProductDetail-Value\">\n                      {productDetails?.display.screenResolution}\n                    </span>\n                  </div>\n\n                  <div className=\"ProductDetail-Spec\">\n                    <span className=\"ProductDetail-Label\">Processor</span>\n\n                    <span className=\"ProductDetail-Value\">\n                      {productDetails?.hardware.cpu}\n                    </span>\n                  </div>\n\n                  <div className=\"ProductDetail-Spec\">\n                    <span className=\"ProductDetail-Label\">RAM</span>\n                    <span className=\"ProductDetail-Value\">\n                      {productDetails?.storage.ram}\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n              <div\n                className=\"ProductDetail-About\"\n                data-cy=\"productDescription\"\n              >\n                <span className=\"ProductDetail-AboutTitle\">\n                  About\n                </span>\n\n                <hr className=\"ProductDetail-Break\" />\n\n                <div className=\"ProductDetail-AboutDescription\">\n                  {productDetails?.description}\n                </div>\n              </div>\n\n              <div className=\"ProductDetail-Tech\">\n                <span className=\"ProductDetail-TechTitle\">Tech specs</span>\n\n                <hr className=\"ProductDetail-Break\" />\n\n                <div className=\"ProductDetail-TechSpecs\">\n                  <div className=\"ProductDetail-TechSpec\">\n                    <span className=\"ProductDetail-TechLabel\">\n                      Screen\n                    </span>\n\n                    {productDetails?.display.screenSize}\n                  </div>\n\n                  <div className=\"ProductDetail-TechSpec\">\n                    <span className=\"ProductDetail-TechLabel\">\n                      Resolution\n                    </span>\n\n                    {productDetails?.display.screenResolution}\n                  </div>\n\n                  <div className=\"ProductDetail-TechSpec\">\n                    <span className=\"ProductDetail-TechLabel\">\n                      Processor\n                    </span>\n\n                    {productDetails?.hardware.cpu}\n                  </div>\n\n                  <div className=\"ProductDetail-TechSpec\">\n                    <span className=\"ProductDetail-TechLabel\">\n                      RAM\n                    </span>\n\n                    {productDetails?.storage.ram}\n                  </div>\n\n                  <div className=\"ProductDetail-TechSpec\">\n                    <span className=\"ProductDetail-TechLabel\">\n                      Built in memory\n                    </span>\n\n                    {productDetails?.storage.flash}\n                  </div>\n\n                  <div className=\"ProductDetail-TechSpec\">\n                    <span className=\"ProductDetail-TechLabel\">\n                      Camera\n                    </span>\n\n                    {productDetails?.camera.primary}\n                  </div>\n\n                  <div className=\"ProductDetail-TechSpec\">\n                    <span className=\"ProductDetail-TechLabel\">\n                      Battery standby time\n                    </span>\n\n                    {productDetails?.battery.standbyTime}\n                  </div>\n                </div>\n              </div>\n            </section>\n\n            <section className=\"Page-Section\">\n              <ProductsSlider\n                products={suggestedProducts}\n                title=\"You may also like\"\n              />\n            </section>\n          </>\n        )}\n    </>\n  );\n};\n","import { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  removeFromCart,\n  plusProduct,\n  minusProduct,\n} from '../../features/cartItemsSlice';\nimport { useAppDispatch } from '../../app/hooks';\nimport { getProductDiscount } from '../../utils/getProductDiscount';\nimport { CartItemType } from '../../types/CartItem';\n\nimport './CartItem.scss';\n\ntype Props = {\n  cartItem: CartItemType\n};\n\nexport const CartItem: React.FC<Props> = ({ cartItem }) => {\n  const dispath = useAppDispatch();\n\n  const { id, product, quantity } = cartItem;\n\n  const { type: productType, id: productID } = product;\n\n  const productDetailsPath = `/${productType}s/${productID}`;\n\n  const discountPrice = useMemo(() => {\n    return getProductDiscount(product);\n  }, [product]);\n\n  return (\n    <>\n      <div className=\"CartItem-Left\">\n        <button\n          className=\"CartItem-IconDelete Icon Icon_delete\"\n          data-cy=\"cartDeleteButton\"\n          type=\"button\"\n          aria-label=\"delete button\"\n          onClick={() => dispath(removeFromCart(id))}\n        />\n\n        <Link\n          className=\"CartItem-LinkImage\"\n          to={productDetailsPath}\n        >\n          <img\n            className=\"CartItem-Image\"\n            src={product.imageUrl}\n            width={66}\n            height={66}\n            alt=\"product\"\n          />\n        </Link>\n\n        <Link\n          className=\"CartItem-LinkTitle\"\n          to={productDetailsPath}\n        >\n          <h2 className=\"CartItem-CartTitle\">\n            {product.name}\n          </h2>\n        </Link>\n      </div>\n\n      <div className=\"CartItem-Right\">\n        <div className=\"CartItem-Counter\">\n          <button\n            className=\"CartItem-Icon Icon Icon_minus\"\n            type=\"button\"\n            aria-label=\"minus button\"\n            disabled={quantity === 1}\n            onClick={() => dispath(minusProduct(id))}\n          />\n\n          <span className=\"CartItem-Total\">{quantity}</span>\n\n          <button\n            className=\"CartItem-Icon Icon Icon_plus\"\n            type=\"button\"\n            aria-label=\"plus button\"\n            onClick={() => dispath(plusProduct(id))}\n          />\n        </div>\n\n        <span className=\"CartItem-Price\">\n          {discountPrice !== product.price\n            ? `$${discountPrice * quantity}`\n            : `$${product.price * quantity}`}\n        </span>\n      </div>\n    </>\n  );\n};\n","import { useMemo, useState } from 'react';\nimport { BackButton } from '../../components/BackButton';\nimport { CartItem } from '../../components/CartItem';\nimport { useAppSelector } from '../../app/hooks';\nimport { getProductDiscount } from '../../utils/getProductDiscount';\n\nimport './CartPage.scss';\n\nexport const CartPage = () => {\n  const [isCheckOut, SetIsCheckOut] = useState(false);\n\n  const { cartItems } = useAppSelector(state => state.cartItems);\n\n  const isCartEmpty = useMemo(() => {\n    return cartItems.length === 0;\n  }, [cartItems]);\n\n  const cartTotal = useMemo(() => {\n    return cartItems.reduce((acc, cartItem) => {\n      const price = cartItem.product.discount > 0\n        ? getProductDiscount(cartItem.product)\n        : cartItem.product.price;\n\n      return acc + price * cartItem.quantity;\n    }, 0);\n  }, [cartItems]);\n\n  const cartQuantity = useMemo(() => {\n    return cartItems.reduce((acc, cartItem) => {\n      return acc + cartItem.quantity;\n    }, 0);\n  }, [cartItems]);\n\n  return (\n    <section className=\"Page-Cart Cart\">\n      <BackButton />\n\n      <h1 className=\"Cart-Title SectionTitle\">Cart</h1>\n\n      {isCartEmpty && 'Your cart is empty'}\n\n      {isCheckOut && 'We are sorry, but this feature is not implemented yet'}\n\n      {!isCheckOut && !isCartEmpty\n        && (\n          <div className=\"Cart-Content\">\n            <ul className=\"Cart-List\">\n              {cartItems.map(cartItem => (\n                <li className=\"Cart-CartItem CartItem\" key={cartItem.id}>\n                  <CartItem cartItem={cartItem} />\n                </li>\n              ))}\n            </ul>\n\n            <div className=\"Cart-Totals\">\n              <span className=\"Cart-TotalPrice\">{`$${cartTotal}`}</span>\n\n              <span className=\"Cart-TotalQuantity\" data-cy=\"productQuantity\">\n                {`Total for ${cartQuantity} items`}\n              </span>\n\n              <hr className=\"Cart-Break\" />\n\n              <button\n                className=\"Cart-Button Button\"\n                type=\"button\"\n                onClick={() => SetIsCheckOut(true)}\n              >\n                Checkout\n              </button>\n            </div>\n          </div>\n        )}\n    </section>\n  );\n};\n","import { useMemo } from 'react';\nimport { useAppSelector } from '../../app/hooks';\nimport { useSearchedItems } from '../../hooks/useFavouriteItems';\nimport { ProductList } from '../../components/ProductList';\nimport { Breadcrumbs } from '../../components/Breadcrumbs';\nimport { formatTotal } from '../../utils/formatTotal';\n\nimport './FavouritesPage.scss';\n\nexport const FavouritesPage = () => {\n  const { favouriteItems } = useAppSelector(state => state.favouriteItems);\n\n  const searchedItems = useSearchedItems(favouriteItems);\n\n  const searchedItemsTotal = useMemo(() => {\n    return searchedItems.length;\n  }, [searchedItems]);\n\n  const isSearchedItemsEmpty = useMemo(() => {\n    return searchedItems.length === 0;\n  }, [searchedItems]);\n\n  const totalString = formatTotal(searchedItemsTotal, 'model');\n\n  return (\n    <section className=\"Page-Favourites Favourites\">\n      <Breadcrumbs />\n\n      <h1 className=\"Favourites-Title SectionTitle\">Favourites</h1>\n\n      {isSearchedItemsEmpty\n        ? 'Your favourites is empty'\n        : (\n          <>\n            <div className=\"Favourites-Total Total\">\n              {totalString}\n            </div>\n\n            <ProductList products={searchedItems} />\n          </>\n        )}\n    </section>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useMemo } from 'react';\nimport { Product } from '../types/Product';\nimport { containQuery } from '../utils/containQuery';\n\nexport const useSearchedItems = (products: Product[]) => {\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n\n  const searchedItems = useMemo(() => {\n    return query\n      ? products.filter(product => containQuery(product, query))\n      : products;\n  }, [products, query]);\n\n  return searchedItems;\n};\n","import { PageLink } from '../../components/PageLink';\nimport { PageLinkType } from '../../types/PageLinkType';\n\nimport './NotFoundPage.scss';\n\nexport const NotFoundPage = () => (\n  <section className=\"Page-Section NotFoundPage\">\n    <h1 className=\"NotFoundPage-Title SectionTitle\">Page not found</h1>\n\n    <PageLink\n      to=\"/\"\n      linkType={PageLinkType.TEXT}\n    >\n      home\n    </PageLink>\n  </section>\n);\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './app/store';\n\nimport App from './App';\nimport { HomePage } from './pages/HomePage';\nimport { ProductsPage } from './pages/ProductsPage';\nimport { ProductType } from './types/ProductType';\nimport { ProductDetailsPage } from './pages/ProductDetailsPage';\nimport { CartPage } from './pages/CartPage';\nimport { FavouritesPage } from './pages/FavouritesPage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const Root = () => (\n  <Provider store={store}>\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"phones\">\n            <Route\n              index\n              element={<ProductsPage productType={ProductType.PHONE} />}\n            />\n\n            <Route\n              path=\":productId\"\n              element={<ProductDetailsPage />}\n            />\n          </Route>\n\n          <Route path=\"tablets\">\n            <Route\n              index\n              element={<ProductsPage productType={ProductType.TABLET} />}\n            />\n\n            <Route\n              path=\":productId\"\n              element={<ProductDetailsPage />}\n            />\n          </Route>\n\n          <Route path=\"accessories\">\n            <Route\n              index\n              element={<ProductsPage productType={ProductType.ACCESSORY} />}\n            />\n\n            <Route\n              path=\":productId\"\n              element={<ProductDetailsPage />}\n            />\n          </Route>\n\n          <Route path=\"cart\" element={<CartPage />} />\n\n          <Route path=\"favourites\" element={<FavouritesPage />} />\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>\n  </Provider>\n\n);\n","import ReactDOM from 'react-dom';\n\nimport { Root } from './Root';\n\nconst root = document.getElementById('root') as HTMLElement;\n\nReactDOM.render(<Root />, root);\n"],"sourceRoot":""}